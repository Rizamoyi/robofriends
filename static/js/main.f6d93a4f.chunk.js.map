{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","props","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","style","overflowY","height","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAYeA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BJ,GAAMK,IAAI,WAC5C,gCACE,6BAAKJ,IACL,4BAAIC,W,SCIGI,EARE,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACf,8BACGA,EAAOC,KAAI,gBAAGR,EAAH,EAAGA,GAAOS,EAAV,wBACV,cAAC,EAAD,aAAeT,GAAIA,GAAQS,GAAhBT,SCMFU,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAChB,qBAAKR,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVS,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCKDI,EAXA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,SAHZ,SAMGH,KCuCUI,G,wDAvCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXpB,OAAQ,GACRiB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEhB,OAAQyB,S,oBAO7C,WACE,MAAgCC,KAAKN,MAA7BpB,EAAR,EAAQA,OAAQiB,EAAhB,EAAgBA,YAEVU,EAAiB3B,EAAO4B,QAAO,SAACC,GACpC,OAAOA,EAAMnC,KAAKoC,cAAcC,SAASd,EAAYa,kBAGvD,OAAQ9B,EAAOgC,OAGb,sBAAKpC,UAAU,KAAf,UACE,6CACA,cAAC,EAAD,CAAWQ,aAAcsB,KAAKZ,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUd,OAAQ2B,SANtB,gD,GA3BYM,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f6d93a4f.chunk.js","sourcesContent":["const Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-2\">\r\n      <img src={`https://robohash.org/${id}`} alt=\"robots\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import Card from './Card';\r\n\r\nconst CardList = ({ robots }) => (\r\n  <div>\r\n    {robots.map(({ id, ...props }) => (\r\n      <Card key={id} id={id} {...props} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default CardList;\r\n","const SearchBox = ({ searchChange }) => (\r\n  <div className=\"pa2\">\r\n    <input\r\n      className=\"pa3 ba b--green bg-lightest-blue\"\r\n      type=\"search\"\r\n      placeholder=\"search robots\"\r\n      onChange={searchChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default SearchBox;\r\n","const Scroll = ({ children }) => (\r\n  <div\r\n    style={{\r\n      overflowY: 'scroll',\r\n      height: '800px',\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { robots, searchField } = this.state;\r\n\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return !robots.length ? (\r\n      <h1>Loading...</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1>RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}